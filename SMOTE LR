 
# Define which resampling method and which ML model to use in the pipeline
from imblearn.over_sampling import SMOTE
from imblearn.pipeline import Pipeline

resampling = SMOTE()
model = LogisticRegression(solver='liblinear')
          
pipeline = Pipeline([('SMOTE', resampling), ('Logistic Regression', model)])

 #You can treat the pipeline as if it were a single machine learning model.

# Split your data X and y, into a training and a test set and fit the pipeline onto the training data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)
          
pipeline.fit(X_train, y_train) 
predicted = pipeline.predict(X_test)
          
# Obtain the results from the classification report and confusion matrix 
print('Classifcation report:\n', classification_report(y_test, predicted))
conf_mat = confusion_matrix(y_true=y_test, y_pred=predicted)
print('Confusion matrix:\n', conf_mat)
 
